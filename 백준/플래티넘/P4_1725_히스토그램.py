'''

1.최대 넓이가 나올수 있는 높이가 연속된 범위 탐색
2.브루트 포스 불가능

1.최대 넓이가 나올 수 있는 높이-->높이가 가장 낮은애가 가장 클 수도 있음 -->
들어온 모든 요소들의 높이를 체크,하나하나 탐색-->가능하긴한가?
2.높이가 연속된 범위 탐색
같은 높이로 멀리 떨어져 있는 애들을 어떻게 하지

높이를 하나 하나 체크?->힘들듯
넓이 범위와 함께 한번에 하는게 맞아보이는데

모든 리스트의 값들을 하나하나 가면서 체크하면 안될거같음

굳이 리스트에 담아야하나?


=====
요소들 하나 하나 담으면서 체크하는 방법이 없나?
가능할거 같은데?

진짜 될듯 ㄱㄷ


1.숫자가 낮은 애들부터 리스트에 저장
(높이,들어간 인덱스) 형태로 리스트에 담음
2.높이가 더 큰애가 들어오면 냅둠
3.높이가 더 낮은애가 들어오면 pop,현재 인덱스와 들어간 인덱스 차이*높이가 그거잖아

아ㅅㅂ 진짜 스택으로 가능했나?
복잡도가 애매하긴한데 최대가 n^2
비교했을때 스택에 안넣게 하면 탐색하는 시간 줄긴 할듯?
더 작은애가 와서 안에 있는 애꺼 뺐으면 현재 인덱스 -1 하면될듯
같아도 pop하고 현재인덱스 -1




'''
import sys
input=sys.stdin.readline
index=answer=0
N=int(input())
lst=[]
for i in range(N):
    h=int(input())
    ind=i
    while lst:
        if lst[-1][0]>h:
            s=lst.pop()
            answer=max(answer,s[0]*(i-s[1]))
            ind=s[1]
        elif lst[-1][0]==h:
            s=lst.pop()
            ind=s[1]
        elif lst[-1][0]<h:
            break
    
    lst.append((h,ind))
while lst:
    s=lst.pop()
    answer=max(answer,s[0]*(N-s[1]))
print(answer)  
        
    